name: "Go Coverage"

on:
  pull_request:
  push:
    branches:
      - main  # Asegura que se ejecute en la rama principal

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 10  # Necesario para encontrar notas previas de cobertura

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable  # Usa la versión estable de Go

      - name: Debug GH Token
        run: echo "GH_TOKEN is set"
        env:
         GH_TOKEN: ${{ secrets.GO_SECRET_TOKEN }}

      - name: Debug working directory
        run: ls -la  # Verificar en qué directorio estamos

      - name: Initialize Go module
        run: |
          if [ ! -f go.mod ]; then
            go mod init example.com/myproject
          fi
          go mod tidy  # Asegura que todas las dependencias estén actualizadas

      - name: Run Go Coverage
        uses: gwatts/go-coverage-action@v2
        id: coverage
        with:
          coverage-threshold: 80
          cover-pkg: ./...
          ignore-pattern: |
            \.pb\.go$
            \_string\.go$
          report-url: https://artifacts.example.com/go-coverage/${{ github.ref_name}}.html

      - name: Upload coverage to S3
        if: always() && steps.coverage.outputs.report-pathname != ''
        run: |
          aws s3 cp ${{ steps.coverage.outputs.report-pathname }} s3://artifacts.example.com-bucket/go-coverage/${{ github.ref_name}}.html
